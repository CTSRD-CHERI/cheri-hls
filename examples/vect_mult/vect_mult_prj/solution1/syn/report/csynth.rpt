

================================================================
== Synthesis Summary Report of 'vect_mult'
================================================================
+ General Information: 
    * Date:           Mon Oct  2 15:00:55 2023
    * Version:        2023.1 (Build 3854077 on May  4 2023)
    * Project:        vect_mult_prj
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: virtexuplus
    * Target device:  xcu250-figd2104-2L-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+------------+------------+-----+
    |       Modules      | Issue|      | Latency | Latency| Iteration|         | Trip |          |         |         |            |            |     |
    |       & Loops      | Type | Slack| (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined|  BRAM   |   DSP   |     FF     |     LUT    | URAM|
    +--------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+------------+------------+-----+
    |+ vect_mult         |     -|  0.00|        -|       -|         -|        -|     -|        no|  2 (~0%)|  3 (~0%)|  1734 (~0%)|  1732 (~0%)|    -|
    | o VITIS_LOOP_12_1  |    II|  2.92|        -|       -|        19|        2|     -|       yes|        -|        -|           -|           -|    -|
    +--------------------+------+------+---------+--------+----------+---------+------+----------+---------+---------+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem | 32 -> 32   | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | size     | 0x10   | 32    | W      | Data signal of size              |                                                                      |
| s_axi_control | a_1      | 0x18   | 32    | W      | Data signal of a                 |                                                                      |
| s_axi_control | a_2      | 0x1c   | 32    | W      | Data signal of a                 |                                                                      |
| s_axi_control | b_1      | 0x24   | 32    | W      | Data signal of b                 |                                                                      |
| s_axi_control | b_2      | 0x28   | 32    | W      | Data signal of b                 |                                                                      |
| s_axi_control | c_1      | 0x30   | 32    | W      | Data signal of c                 |                                                                      |
| s_axi_control | c_2      | 0x34   | 32    | W      | Data signal of c                 |                                                                      |
+---------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+----------+
| Argument | Direction | Datatype |
+----------+-----------+----------+
| size     | in        | int      |
| a        | inout     | int*     |
| b        | inout     | int*     |
| c        | inout     | int*     |
+----------+-----------+----------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+--------------------------------+
| Argument | HW Interface  | HW Type   | HW Usage | HW Info                        |
+----------+---------------+-----------+----------+--------------------------------+
| size     | s_axi_control | register  |          | name=size offset=0x10 range=32 |
| a        | m_axi_gmem    | interface |          |                                |
| a        | s_axi_control | register  | offset   | name=a_1 offset=0x18 range=32  |
| a        | s_axi_control | register  | offset   | name=a_2 offset=0x1c range=32  |
| b        | m_axi_gmem    | interface |          |                                |
| b        | s_axi_control | register  | offset   | name=b_1 offset=0x24 range=32  |
| b        | s_axi_control | register  | offset   | name=b_2 offset=0x28 range=32  |
| c        | m_axi_gmem    | interface |          |                                |
| c        | s_axi_control | register  | offset   | name=c_1 offset=0x30 range=32  |
| c        | s_axi_control | register  | offset   | name=c_2 offset=0x34 range=32  |
+----------+---------------+-----------+----------+--------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+----------+-------+-----------------+---------------------+
| HW Interface | Direction | Length   | Width | Loop            | Loop Location       |
+--------------+-----------+----------+-------+-----------------+---------------------+
| m_axi_gmem   | write     | variable | 32    | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 |
+--------------+-----------+----------+-------+-----------------+---------------------+

* All M_AXI Variable Accesses
+--------------+----------+---------------------+-----------+--------------+----------+-----------------+---------------------+------------+-------------------------------------------------------------------------------------------------------+
| HW Interface | Variable | Access Location     | Direction | Burst Status | Length   | Loop            | Loop Location       | Resolution | Problem                                                                                               |
+--------------+----------+---------------------+-----------+--------------+----------+-----------------+---------------------+------------+-------------------------------------------------------------------------------------------------------+
| m_axi_gmem   |          | vect_mult.cpp:12:19 | read      | Fail         |          |                 |                     | 214-224    | Could not burst due to multiple potential reads to the same bundle in the same region.                |
| m_axi_gmem   | c        | vect_mult.cpp:14:7  | write     | Widen Fail   |          | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 | 214-353    | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem   | b        | vect_mult.cpp:14:16 | read      | Widen Fail   |          | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 | 214-353    | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem   | a        | vect_mult.cpp:14:9  | read      | Widen Fail   |          | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 | 214-353    | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem   | c        | vect_mult.cpp:14:7  | write     | Inferred     | variable | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 |            |                                                                                                       |
| m_axi_gmem   | b        | vect_mult.cpp:14:16 | read      | Inferred     | variable | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 |            |                                                                                                       |
| m_axi_gmem   | a        | vect_mult.cpp:14:9  | read      | Inferred     | variable | VITIS_LOOP_12_1 | vect_mult.cpp:12:19 |            |                                                                                                       |
+--------------+----------+---------------------+-----------+--------------+----------+-----------------+---------------------+------------+-------------------------------------------------------------------------------------------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2023.1;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+-------------------------+-----+--------+------------+-----+--------+---------+
| Name                    | DSP | Pragma | Variable   | Op  | Impl   | Latency |
+-------------------------+-----+--------+------------+-----+--------+---------+
| + vect_mult             | 3   |        |            |     |        |         |
|   add_ln12_fu_267_p2    | -   |        | add_ln12   | add | fabric | 0       |
|   add_ln14_fu_257_p2    | -   |        | add_ln14   | add | fabric | 0       |
|   add_ln14_1_fu_282_p2  | -   |        | add_ln14_1 | add | fabric | 0       |
|   mul_32s_32s_32_2_1_U1 | 3   |        | mul_ln14   | mul | auto   | 1       |
+-------------------------+-----+--------+------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
  No bind storage info in design

================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+-------------------------+-------------------------------+
| Type      | Options                 | Location                      |
+-----------+-------------------------+-------------------------------+
| interface | m_axi port = a          | vect_mult.cpp:4 in vect_mult  |
| interface | m_axi port = b          | vect_mult.cpp:5 in vect_mult  |
| interface | m_axi port = c          | vect_mult.cpp:6 in vect_mult  |
| interface | s_axilite port = size   | vect_mult.cpp:7 in vect_mult  |
| interface | s_axilite port = return | vect_mult.cpp:8 in vect_mult  |
| pipeline  |                         | vect_mult.cpp:13 in vect_mult |
+-----------+-------------------------+-------------------------------+


